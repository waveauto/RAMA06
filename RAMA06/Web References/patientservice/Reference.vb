'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.0
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.0.
'
Namespace patientservice
    
    'CODEGEN: The optional WSDL extension element 'binding' from namespace 'http://schemas.microsoft.com/soap-toolkit/wsdl-extension' was not handled.
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="patientserviceSoapBinding", [Namespace]:="http://tempuri.org/patientservice/wsdl/")>  _
    Partial Public Class patientservice
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CheckClinicTypeBySDLOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private get_drug_IPD_statusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private get_drug_IPDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEncouterDetailByEncIdAndTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEncounterDetailClinicTypePriceTypeByMRNActiveDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchCytoResultByMRNDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchPathoResultByMRNDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getParentDetailByMRNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchORApppointmentByPlaceAndAppointmentDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckPlacePremiumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetChangeOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_demographic_shortbyANOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductLocationByBagIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPatientBloodGrpByMRNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetLabEventPerformDateTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCurrentDrugOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchAllPriceTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchAllClinicTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetBBTrackingByORDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetBBTrackingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetLabResultOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchProductDetailByProductIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrderLabStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelPaymentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPaymentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetLabRQOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetLabEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrderRQOByMRNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrderRQOByInvoiceIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrderRQOByRqIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Version_LabServiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientinSurgicalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RxOverSupplyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientinOrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_AdrNaranjoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDrRepmedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getrxseq_prmOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetClaimFromRefundOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ws_AllDrugGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ws_DrugGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRxSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRepeateMedByHNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private get_PriceSupply_byProduct_idOperationCompleted As System.Threading.SendOrPostCallback
        
        Private get_ReimburseSupply_byProduct_idOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_lab_data_researchbydate4batchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_lab_data_researchall4batchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_lab_data_researchbydateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_lab_data_researchallOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_lab_data_outsideOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrganizationInfoByParentIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Org_detailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Place_detailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_sdloc_allOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_sdloc_detailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_staff_fulldetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_ConfirmTubeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_LabOrderRegisterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_TubeIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Lab_OrderRegistedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Lab_OrderFullOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_StaffPayrollOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_OrderReceiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_Ward2XrayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_WorkStaffOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ForeignXrayOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ForeignDemographicOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_XrayOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_demographic_long_outsidepatientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_MedPatientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_OROperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_PAEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Lab_orderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_Demographic_Long_OutsidePatientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_staff_detailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_AdrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Claim_AmtOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_lab_dataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cancel_BillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Set_BillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_all_examOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Payment_StatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ipd_detailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEligibilityInsuranceDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEncounterDetailByMRNENCTYPEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEncounterDetailByMRNDATEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEncounterDetailByMRNForTodayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_appointment_detailByDateSdlocOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_appointment_detailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHNByIdCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_demographic_shortByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_demographic_longOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_demographic_shortOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_VersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.RAMA06.My.MySettings.Default.RAMA06_patientservice_patientservice
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CheckClinicTypeBySDLOCCompleted As CheckClinicTypeBySDLOCCompletedEventHandler
        
        '''<remarks/>
        Public Event get_drug_IPD_statusCompleted As get_drug_IPD_statusCompletedEventHandler
        
        '''<remarks/>
        Public Event get_drug_IPDCompleted As get_drug_IPDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEncouterDetailByEncIdAndTypeCompleted As GetEncouterDetailByEncIdAndTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompleted As GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompletedEventHandler
        
        '''<remarks/>
        Public Event searchCytoResultByMRNDateCompleted As searchCytoResultByMRNDateCompletedEventHandler
        
        '''<remarks/>
        Public Event searchPathoResultByMRNDateCompleted As searchPathoResultByMRNDateCompletedEventHandler
        
        '''<remarks/>
        Public Event getParentDetailByMRNCompleted As getParentDetailByMRNCompletedEventHandler
        
        '''<remarks/>
        Public Event searchORApppointmentByPlaceAndAppointmentDateCompleted As searchORApppointmentByPlaceAndAppointmentDateCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckPlacePremiumCompleted As CheckPlacePremiumCompletedEventHandler
        
        '''<remarks/>
        Public Event SetChangeOrderCompleted As SetChangeOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_demographic_shortbyANCompleted As Get_demographic_shortbyANCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductLocationByBagIDCompleted As GetProductLocationByBagIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPatientBloodGrpByMRNCompleted As GetPatientBloodGrpByMRNCompletedEventHandler
        
        '''<remarks/>
        Public Event SetLabEventPerformDateTimeCompleted As SetLabEventPerformDateTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event getCurrentDrugCompleted As getCurrentDrugCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchAllPriceTypeCompleted As SearchAllPriceTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchAllClinicTypeCompleted As SearchAllClinicTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetBBTrackingByORDCompleted As SetBBTrackingByORDCompletedEventHandler
        
        '''<remarks/>
        Public Event SetBBTrackingCompleted As SetBBTrackingCompletedEventHandler
        
        '''<remarks/>
        Public Event SetLabResultCompleted As SetLabResultCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchProductDetailByProductIDCompleted As SearchProductDetailByProductIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrderLabStatusCompleted As GetOrderLabStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelPaymentCompleted As CancelPaymentCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPaymentCompleted As SetPaymentCompletedEventHandler
        
        '''<remarks/>
        Public Event SetLabRQOCompleted As SetLabRQOCompletedEventHandler
        
        '''<remarks/>
        Public Event SetLabEventCompleted As SetLabEventCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrderRQOByMRNCompleted As GetOrderRQOByMRNCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrderRQOByInvoiceIdCompleted As GetOrderRQOByInvoiceIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrderRQOByRqIdCompleted As GetOrderRQOByRqIdCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Version_LabServiceCompleted As Get_Version_LabServiceCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientinSurgicalCompleted As getPatientinSurgicalCompletedEventHandler
        
        '''<remarks/>
        Public Event RxOverSupplyCompleted As RxOverSupplyCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientinOrCompleted As getPatientinOrCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_AdrNaranjoCompleted As Get_AdrNaranjoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDrRepmedCompleted As GetDrRepmedCompletedEventHandler
        
        '''<remarks/>
        Public Event getrxseq_prmCompleted As getrxseq_prmCompletedEventHandler
        
        '''<remarks/>
        Public Event GetClaimFromRefundCompleted As GetClaimFromRefundCompletedEventHandler
        
        '''<remarks/>
        Public Event Ws_AllDrugGroupCompleted As Ws_AllDrugGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event Ws_DrugGroupCompleted As Ws_DrugGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRxSeqCompleted As GetRxSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRepeateMedByHNCompleted As GetRepeateMedByHNCompletedEventHandler
        
        '''<remarks/>
        Public Event get_PriceSupply_byProduct_idCompleted As get_PriceSupply_byProduct_idCompletedEventHandler
        
        '''<remarks/>
        Public Event get_ReimburseSupply_byProduct_idCompleted As get_ReimburseSupply_byProduct_idCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_lab_data_researchbydate4batchCompleted As Get_lab_data_researchbydate4batchCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_lab_data_researchall4batchCompleted As Get_lab_data_researchall4batchCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_lab_data_researchbydateCompleted As Get_lab_data_researchbydateCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_lab_data_researchallCompleted As Get_lab_data_researchallCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_lab_data_outsideCompleted As Get_lab_data_outsideCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrganizationInfoByParentIdCompleted As GetOrganizationInfoByParentIdCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Org_detailCompleted As Get_Org_detailCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Place_detailCompleted As Get_Place_detailCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_sdloc_allCompleted As Get_sdloc_allCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_sdloc_detailCompleted As Get_sdloc_detailCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_staff_fulldetailCompleted As Get_staff_fulldetailCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_ConfirmTubeCompleted As Set_ConfirmTubeCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_LabOrderRegisterCompleted As Set_LabOrderRegisterCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_TubeIDCompleted As Get_TubeIDCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Lab_OrderRegistedCompleted As Get_Lab_OrderRegistedCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Lab_OrderFullCompleted As Get_Lab_OrderFullCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_StaffPayrollCompleted As Set_StaffPayrollCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_OrderReceiveCompleted As Set_OrderReceiveCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_Ward2XrayCompleted As Set_Ward2XrayCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_WorkStaffCompleted As Set_WorkStaffCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ForeignXrayOrderCompleted As Get_ForeignXrayOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ForeignDemographicCompleted As Get_ForeignDemographicCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_XrayOrderCompleted As Get_XrayOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_demographic_long_outsidepatientCompleted As Get_demographic_long_outsidepatientCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_MedPatientCompleted As Get_MedPatientCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_ORCompleted As Set_ORCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_PAECompleted As Set_PAECompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Lab_orderCompleted As Get_Lab_orderCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_Demographic_Long_OutsidePatientCompleted As Set_Demographic_Long_OutsidePatientCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_staff_detailCompleted As Get_staff_detailCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_AdrCompleted As Get_AdrCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Claim_AmtCompleted As Get_Claim_AmtCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_lab_dataCompleted As Get_lab_dataCompletedEventHandler
        
        '''<remarks/>
        Public Event Cancel_BillingCompleted As Cancel_BillingCompletedEventHandler
        
        '''<remarks/>
        Public Event Set_BillingCompleted As Set_BillingCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_all_examCompleted As Get_all_examCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Payment_StatusCompleted As Get_Payment_StatusCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ipd_detailCompleted As Get_ipd_detailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEligibilityInsuranceDetailCompleted As GetEligibilityInsuranceDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEncounterDetailByMRNENCTYPECompleted As GetEncounterDetailByMRNENCTYPECompletedEventHandler
        
        '''<remarks/>
        Public Event GetEncounterDetailByMRNDATECompleted As GetEncounterDetailByMRNDATECompletedEventHandler
        
        '''<remarks/>
        Public Event GetEncounterDetailByMRNForTodayCompleted As GetEncounterDetailByMRNForTodayCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_appointment_detailByDateSdlocCompleted As Get_appointment_detailByDateSdlocCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_appointment_detailCompleted As Get_appointment_detailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHNByIdCardCompleted As GetHNByIdCardCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_demographic_shortByNameCompleted As Get_demographic_shortByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_demographic_longCompleted As Get_demographic_longCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_demographic_shortCompleted As Get_demographic_shortCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_VersionCompleted As Get_VersionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.CheckClinicTypeBySDLOC", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function CheckClinicTypeBySDLOC(ByVal pCurrentSDLOC As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("CheckClinicTypeBySDLOC", New Object() {pCurrentSDLOC})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckClinicTypeBySDLOCAsync(ByVal pCurrentSDLOC As String)
            Me.CheckClinicTypeBySDLOCAsync(pCurrentSDLOC, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckClinicTypeBySDLOCAsync(ByVal pCurrentSDLOC As String, ByVal userState As Object)
            If (Me.CheckClinicTypeBySDLOCOperationCompleted Is Nothing) Then
                Me.CheckClinicTypeBySDLOCOperationCompleted = AddressOf Me.OnCheckClinicTypeBySDLOCOperationCompleted
            End If
            Me.InvokeAsync("CheckClinicTypeBySDLOC", New Object() {pCurrentSDLOC}, Me.CheckClinicTypeBySDLOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckClinicTypeBySDLOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckClinicTypeBySDLOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckClinicTypeBySDLOCCompleted(Me, New CheckClinicTypeBySDLOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_drug_IPD_status", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function get_drug_IPD_status(ByVal hn As String, ByVal cOrderId As String, ByVal drugcode As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("get_drug_IPD_status", New Object() {hn, cOrderId, drugcode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub get_drug_IPD_statusAsync(ByVal hn As String, ByVal cOrderId As String, ByVal drugcode As String)
            Me.get_drug_IPD_statusAsync(hn, cOrderId, drugcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub get_drug_IPD_statusAsync(ByVal hn As String, ByVal cOrderId As String, ByVal drugcode As String, ByVal userState As Object)
            If (Me.get_drug_IPD_statusOperationCompleted Is Nothing) Then
                Me.get_drug_IPD_statusOperationCompleted = AddressOf Me.Onget_drug_IPD_statusOperationCompleted
            End If
            Me.InvokeAsync("get_drug_IPD_status", New Object() {hn, cOrderId, drugcode}, Me.get_drug_IPD_statusOperationCompleted, userState)
        End Sub
        
        Private Sub Onget_drug_IPD_statusOperationCompleted(ByVal arg As Object)
            If (Not (Me.get_drug_IPD_statusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent get_drug_IPD_statusCompleted(Me, New get_drug_IPD_statusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_drug_IPD", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function get_drug_IPD(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("get_drug_IPD", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub get_drug_IPDAsync(ByVal hn As String)
            Me.get_drug_IPDAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub get_drug_IPDAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.get_drug_IPDOperationCompleted Is Nothing) Then
                Me.get_drug_IPDOperationCompleted = AddressOf Me.Onget_drug_IPDOperationCompleted
            End If
            Me.InvokeAsync("get_drug_IPD", New Object() {hn}, Me.get_drug_IPDOperationCompleted, userState)
        End Sub
        
        Private Sub Onget_drug_IPDOperationCompleted(ByVal arg As Object)
            If (Not (Me.get_drug_IPDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent get_drug_IPDCompleted(Me, New get_drug_IPDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncouterDetailByEncIdA"& _ 
            "ndType", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetEncouterDetailByEncIdAndType(ByVal penc_id As String, ByVal penc_type As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetEncouterDetailByEncIdAndType", New Object() {penc_id, penc_type})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEncouterDetailByEncIdAndTypeAsync(ByVal penc_id As String, ByVal penc_type As String)
            Me.GetEncouterDetailByEncIdAndTypeAsync(penc_id, penc_type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEncouterDetailByEncIdAndTypeAsync(ByVal penc_id As String, ByVal penc_type As String, ByVal userState As Object)
            If (Me.GetEncouterDetailByEncIdAndTypeOperationCompleted Is Nothing) Then
                Me.GetEncouterDetailByEncIdAndTypeOperationCompleted = AddressOf Me.OnGetEncouterDetailByEncIdAndTypeOperationCompleted
            End If
            Me.InvokeAsync("GetEncouterDetailByEncIdAndType", New Object() {penc_id, penc_type}, Me.GetEncouterDetailByEncIdAndTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEncouterDetailByEncIdAndTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEncouterDetailByEncIdAndTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEncouterDetailByEncIdAndTypeCompleted(Me, New GetEncouterDetailByEncIdAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailClinicT"& _ 
            "ypePriceTypeByMRNActiveDate", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetEncounterDetailClinicTypePriceTypeByMRNActiveDate(ByVal pMrn As String, ByVal pActiveDate As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetEncounterDetailClinicTypePriceTypeByMRNActiveDate", New Object() {pMrn, pActiveDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailClinicTypePriceTypeByMRNActiveDateAsync(ByVal pMrn As String, ByVal pActiveDate As String)
            Me.GetEncounterDetailClinicTypePriceTypeByMRNActiveDateAsync(pMrn, pActiveDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailClinicTypePriceTypeByMRNActiveDateAsync(ByVal pMrn As String, ByVal pActiveDate As String, ByVal userState As Object)
            If (Me.GetEncounterDetailClinicTypePriceTypeByMRNActiveDateOperationCompleted Is Nothing) Then
                Me.GetEncounterDetailClinicTypePriceTypeByMRNActiveDateOperationCompleted = AddressOf Me.OnGetEncounterDetailClinicTypePriceTypeByMRNActiveDateOperationCompleted
            End If
            Me.InvokeAsync("GetEncounterDetailClinicTypePriceTypeByMRNActiveDate", New Object() {pMrn, pActiveDate}, Me.GetEncounterDetailClinicTypePriceTypeByMRNActiveDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEncounterDetailClinicTypePriceTypeByMRNActiveDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompleted(Me, New GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.searchCytoResultByMRNDate"& _ 
            "", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function searchCytoResultByMRNDate(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("searchCytoResultByMRNDate", New Object() {pHn, pStartDate, pEndDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchCytoResultByMRNDateAsync(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String)
            Me.searchCytoResultByMRNDateAsync(pHn, pStartDate, pEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchCytoResultByMRNDateAsync(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String, ByVal userState As Object)
            If (Me.searchCytoResultByMRNDateOperationCompleted Is Nothing) Then
                Me.searchCytoResultByMRNDateOperationCompleted = AddressOf Me.OnsearchCytoResultByMRNDateOperationCompleted
            End If
            Me.InvokeAsync("searchCytoResultByMRNDate", New Object() {pHn, pStartDate, pEndDate}, Me.searchCytoResultByMRNDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchCytoResultByMRNDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchCytoResultByMRNDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchCytoResultByMRNDateCompleted(Me, New searchCytoResultByMRNDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.searchPathoResultByMRNDat"& _ 
            "e", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function searchPathoResultByMRNDate(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("searchPathoResultByMRNDate", New Object() {pHn, pStartDate, pEndDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchPathoResultByMRNDateAsync(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String)
            Me.searchPathoResultByMRNDateAsync(pHn, pStartDate, pEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchPathoResultByMRNDateAsync(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String, ByVal userState As Object)
            If (Me.searchPathoResultByMRNDateOperationCompleted Is Nothing) Then
                Me.searchPathoResultByMRNDateOperationCompleted = AddressOf Me.OnsearchPathoResultByMRNDateOperationCompleted
            End If
            Me.InvokeAsync("searchPathoResultByMRNDate", New Object() {pHn, pStartDate, pEndDate}, Me.searchPathoResultByMRNDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchPathoResultByMRNDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchPathoResultByMRNDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchPathoResultByMRNDateCompleted(Me, New searchPathoResultByMRNDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getParentDetailByMRN", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function getParentDetailByMRN(ByVal pcHN_baby As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("getParentDetailByMRN", New Object() {pcHN_baby})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getParentDetailByMRNAsync(ByVal pcHN_baby As String)
            Me.getParentDetailByMRNAsync(pcHN_baby, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getParentDetailByMRNAsync(ByVal pcHN_baby As String, ByVal userState As Object)
            If (Me.getParentDetailByMRNOperationCompleted Is Nothing) Then
                Me.getParentDetailByMRNOperationCompleted = AddressOf Me.OngetParentDetailByMRNOperationCompleted
            End If
            Me.InvokeAsync("getParentDetailByMRN", New Object() {pcHN_baby}, Me.getParentDetailByMRNOperationCompleted, userState)
        End Sub
        
        Private Sub OngetParentDetailByMRNOperationCompleted(ByVal arg As Object)
            If (Not (Me.getParentDetailByMRNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getParentDetailByMRNCompleted(Me, New getParentDetailByMRNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.searchORApppointmentByPla"& _ 
            "ceAndAppointmentDate", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function searchORApppointmentByPlaceAndAppointmentDate(ByVal pcPlace_id As String, ByVal pcAppointmentDate As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("searchORApppointmentByPlaceAndAppointmentDate", New Object() {pcPlace_id, pcAppointmentDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchORApppointmentByPlaceAndAppointmentDateAsync(ByVal pcPlace_id As String, ByVal pcAppointmentDate As String)
            Me.searchORApppointmentByPlaceAndAppointmentDateAsync(pcPlace_id, pcAppointmentDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchORApppointmentByPlaceAndAppointmentDateAsync(ByVal pcPlace_id As String, ByVal pcAppointmentDate As String, ByVal userState As Object)
            If (Me.searchORApppointmentByPlaceAndAppointmentDateOperationCompleted Is Nothing) Then
                Me.searchORApppointmentByPlaceAndAppointmentDateOperationCompleted = AddressOf Me.OnsearchORApppointmentByPlaceAndAppointmentDateOperationCompleted
            End If
            Me.InvokeAsync("searchORApppointmentByPlaceAndAppointmentDate", New Object() {pcPlace_id, pcAppointmentDate}, Me.searchORApppointmentByPlaceAndAppointmentDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchORApppointmentByPlaceAndAppointmentDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchORApppointmentByPlaceAndAppointmentDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchORApppointmentByPlaceAndAppointmentDateCompleted(Me, New searchORApppointmentByPlaceAndAppointmentDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.CheckPlacePremium", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function CheckPlacePremium(ByVal pCurrentWard As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> Boolean
            Dim results() As Object = Me.Invoke("CheckPlacePremium", New Object() {pCurrentWard})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckPlacePremiumAsync(ByVal pCurrentWard As String)
            Me.CheckPlacePremiumAsync(pCurrentWard, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckPlacePremiumAsync(ByVal pCurrentWard As String, ByVal userState As Object)
            If (Me.CheckPlacePremiumOperationCompleted Is Nothing) Then
                Me.CheckPlacePremiumOperationCompleted = AddressOf Me.OnCheckPlacePremiumOperationCompleted
            End If
            Me.InvokeAsync("CheckPlacePremium", New Object() {pCurrentWard}, Me.CheckPlacePremiumOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckPlacePremiumOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckPlacePremiumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckPlacePremiumCompleted(Me, New CheckPlacePremiumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetChangeOrder", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetChangeOrder(ByVal pcHL7StrORD As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetChangeOrder", New Object() {pcHL7StrORD})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetChangeOrderAsync(ByVal pcHL7StrORD As String)
            Me.SetChangeOrderAsync(pcHL7StrORD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetChangeOrderAsync(ByVal pcHL7StrORD As String, ByVal userState As Object)
            If (Me.SetChangeOrderOperationCompleted Is Nothing) Then
                Me.SetChangeOrderOperationCompleted = AddressOf Me.OnSetChangeOrderOperationCompleted
            End If
            Me.InvokeAsync("SetChangeOrder", New Object() {pcHL7StrORD}, Me.SetChangeOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetChangeOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetChangeOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetChangeOrderCompleted(Me, New SetChangeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_shortbyAN"& _ 
            "", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_demographic_shortbyAN(ByVal pAn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_demographic_shortbyAN", New Object() {pAn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_shortbyANAsync(ByVal pAn As String)
            Me.Get_demographic_shortbyANAsync(pAn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_shortbyANAsync(ByVal pAn As String, ByVal userState As Object)
            If (Me.Get_demographic_shortbyANOperationCompleted Is Nothing) Then
                Me.Get_demographic_shortbyANOperationCompleted = AddressOf Me.OnGet_demographic_shortbyANOperationCompleted
            End If
            Me.InvokeAsync("Get_demographic_shortbyAN", New Object() {pAn}, Me.Get_demographic_shortbyANOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_demographic_shortbyANOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_demographic_shortbyANCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_demographic_shortbyANCompleted(Me, New Get_demographic_shortbyANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetProductLocationByBagID"& _ 
            "", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetProductLocationByBagID(ByVal pBagID As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetProductLocationByBagID", New Object() {pBagID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductLocationByBagIDAsync(ByVal pBagID As String)
            Me.GetProductLocationByBagIDAsync(pBagID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductLocationByBagIDAsync(ByVal pBagID As String, ByVal userState As Object)
            If (Me.GetProductLocationByBagIDOperationCompleted Is Nothing) Then
                Me.GetProductLocationByBagIDOperationCompleted = AddressOf Me.OnGetProductLocationByBagIDOperationCompleted
            End If
            Me.InvokeAsync("GetProductLocationByBagID", New Object() {pBagID}, Me.GetProductLocationByBagIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductLocationByBagIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductLocationByBagIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductLocationByBagIDCompleted(Me, New GetProductLocationByBagIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetPatientBloodGrpByMRN", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetPatientBloodGrpByMRN(ByVal pMrn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetPatientBloodGrpByMRN", New Object() {pMrn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPatientBloodGrpByMRNAsync(ByVal pMrn As String)
            Me.GetPatientBloodGrpByMRNAsync(pMrn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPatientBloodGrpByMRNAsync(ByVal pMrn As String, ByVal userState As Object)
            If (Me.GetPatientBloodGrpByMRNOperationCompleted Is Nothing) Then
                Me.GetPatientBloodGrpByMRNOperationCompleted = AddressOf Me.OnGetPatientBloodGrpByMRNOperationCompleted
            End If
            Me.InvokeAsync("GetPatientBloodGrpByMRN", New Object() {pMrn}, Me.GetPatientBloodGrpByMRNOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPatientBloodGrpByMRNOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPatientBloodGrpByMRNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPatientBloodGrpByMRNCompleted(Me, New GetPatientBloodGrpByMRNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabEventPerformDateTim"& _ 
            "e", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetLabEventPerformDateTime(ByVal pStrEvn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetLabEventPerformDateTime", New Object() {pStrEvn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetLabEventPerformDateTimeAsync(ByVal pStrEvn As String)
            Me.SetLabEventPerformDateTimeAsync(pStrEvn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetLabEventPerformDateTimeAsync(ByVal pStrEvn As String, ByVal userState As Object)
            If (Me.SetLabEventPerformDateTimeOperationCompleted Is Nothing) Then
                Me.SetLabEventPerformDateTimeOperationCompleted = AddressOf Me.OnSetLabEventPerformDateTimeOperationCompleted
            End If
            Me.InvokeAsync("SetLabEventPerformDateTime", New Object() {pStrEvn}, Me.SetLabEventPerformDateTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetLabEventPerformDateTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetLabEventPerformDateTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetLabEventPerformDateTimeCompleted(Me, New SetLabEventPerformDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getCurrentDrug", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function getCurrentDrug(ByVal cHn As String, ByVal dDate As Date) As <System.Xml.Serialization.SoapElementAttribute("Result")> Object
            Dim results() As Object = Me.Invoke("getCurrentDrug", New Object() {cHn, dDate})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCurrentDrugAsync(ByVal cHn As String, ByVal dDate As Date)
            Me.getCurrentDrugAsync(cHn, dDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCurrentDrugAsync(ByVal cHn As String, ByVal dDate As Date, ByVal userState As Object)
            If (Me.getCurrentDrugOperationCompleted Is Nothing) Then
                Me.getCurrentDrugOperationCompleted = AddressOf Me.OngetCurrentDrugOperationCompleted
            End If
            Me.InvokeAsync("getCurrentDrug", New Object() {cHn, dDate}, Me.getCurrentDrugOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCurrentDrugOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCurrentDrugCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCurrentDrugCompleted(Me, New getCurrentDrugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SearchAllPriceType", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SearchAllPriceType() As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SearchAllPriceType", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchAllPriceTypeAsync()
            Me.SearchAllPriceTypeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchAllPriceTypeAsync(ByVal userState As Object)
            If (Me.SearchAllPriceTypeOperationCompleted Is Nothing) Then
                Me.SearchAllPriceTypeOperationCompleted = AddressOf Me.OnSearchAllPriceTypeOperationCompleted
            End If
            Me.InvokeAsync("SearchAllPriceType", New Object(-1) {}, Me.SearchAllPriceTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchAllPriceTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchAllPriceTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchAllPriceTypeCompleted(Me, New SearchAllPriceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SearchAllClinicType", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SearchAllClinicType() As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SearchAllClinicType", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchAllClinicTypeAsync()
            Me.SearchAllClinicTypeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchAllClinicTypeAsync(ByVal userState As Object)
            If (Me.SearchAllClinicTypeOperationCompleted Is Nothing) Then
                Me.SearchAllClinicTypeOperationCompleted = AddressOf Me.OnSearchAllClinicTypeOperationCompleted
            End If
            Me.InvokeAsync("SearchAllClinicType", New Object(-1) {}, Me.SearchAllClinicTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchAllClinicTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchAllClinicTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchAllClinicTypeCompleted(Me, New SearchAllClinicTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetBBTrackingByORD", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetBBTrackingByORD(ByVal pnOrderID As Double, ByVal pcHL7HeaderMsg As String, ByVal pcStrObsIDPutMsg As String, ByVal pcMode As String, ByVal pcStrBPO As String, ByVal pcStrBPX As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetBBTrackingByORD", New Object() {pnOrderID, pcHL7HeaderMsg, pcStrObsIDPutMsg, pcMode, pcStrBPO, pcStrBPX})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetBBTrackingByORDAsync(ByVal pnOrderID As Double, ByVal pcHL7HeaderMsg As String, ByVal pcStrObsIDPutMsg As String, ByVal pcMode As String, ByVal pcStrBPO As String, ByVal pcStrBPX As String)
            Me.SetBBTrackingByORDAsync(pnOrderID, pcHL7HeaderMsg, pcStrObsIDPutMsg, pcMode, pcStrBPO, pcStrBPX, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBBTrackingByORDAsync(ByVal pnOrderID As Double, ByVal pcHL7HeaderMsg As String, ByVal pcStrObsIDPutMsg As String, ByVal pcMode As String, ByVal pcStrBPO As String, ByVal pcStrBPX As String, ByVal userState As Object)
            If (Me.SetBBTrackingByORDOperationCompleted Is Nothing) Then
                Me.SetBBTrackingByORDOperationCompleted = AddressOf Me.OnSetBBTrackingByORDOperationCompleted
            End If
            Me.InvokeAsync("SetBBTrackingByORD", New Object() {pnOrderID, pcHL7HeaderMsg, pcStrObsIDPutMsg, pcMode, pcStrBPO, pcStrBPX}, Me.SetBBTrackingByORDOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetBBTrackingByORDOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetBBTrackingByORDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetBBTrackingByORDCompleted(Me, New SetBBTrackingByORDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetBBTracking", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetBBTracking(ByVal pHL7Msg As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetBBTracking", New Object() {pHL7Msg})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetBBTrackingAsync(ByVal pHL7Msg As String)
            Me.SetBBTrackingAsync(pHL7Msg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBBTrackingAsync(ByVal pHL7Msg As String, ByVal userState As Object)
            If (Me.SetBBTrackingOperationCompleted Is Nothing) Then
                Me.SetBBTrackingOperationCompleted = AddressOf Me.OnSetBBTrackingOperationCompleted
            End If
            Me.InvokeAsync("SetBBTracking", New Object() {pHL7Msg}, Me.SetBBTrackingOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetBBTrackingOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetBBTrackingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetBBTrackingCompleted(Me, New SetBBTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabResult", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetLabResult(ByVal pLabRes As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetLabResult", New Object() {pLabRes})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetLabResultAsync(ByVal pLabRes As String)
            Me.SetLabResultAsync(pLabRes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetLabResultAsync(ByVal pLabRes As String, ByVal userState As Object)
            If (Me.SetLabResultOperationCompleted Is Nothing) Then
                Me.SetLabResultOperationCompleted = AddressOf Me.OnSetLabResultOperationCompleted
            End If
            Me.InvokeAsync("SetLabResult", New Object() {pLabRes}, Me.SetLabResultOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetLabResultOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetLabResultCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetLabResultCompleted(Me, New SetLabResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SearchProductDetailByProd"& _ 
            "uctID", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SearchProductDetailByProductID(ByVal pProductID As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SearchProductDetailByProductID", New Object() {pProductID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchProductDetailByProductIDAsync(ByVal pProductID As String)
            Me.SearchProductDetailByProductIDAsync(pProductID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchProductDetailByProductIDAsync(ByVal pProductID As String, ByVal userState As Object)
            If (Me.SearchProductDetailByProductIDOperationCompleted Is Nothing) Then
                Me.SearchProductDetailByProductIDOperationCompleted = AddressOf Me.OnSearchProductDetailByProductIDOperationCompleted
            End If
            Me.InvokeAsync("SearchProductDetailByProductID", New Object() {pProductID}, Me.SearchProductDetailByProductIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchProductDetailByProductIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchProductDetailByProductIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchProductDetailByProductIDCompleted(Me, New SearchProductDetailByProductIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderLabStatus", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetOrderLabStatus(ByVal pnOrderID As Double) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetOrderLabStatus", New Object() {pnOrderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrderLabStatusAsync(ByVal pnOrderID As Double)
            Me.GetOrderLabStatusAsync(pnOrderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrderLabStatusAsync(ByVal pnOrderID As Double, ByVal userState As Object)
            If (Me.GetOrderLabStatusOperationCompleted Is Nothing) Then
                Me.GetOrderLabStatusOperationCompleted = AddressOf Me.OnGetOrderLabStatusOperationCompleted
            End If
            Me.InvokeAsync("GetOrderLabStatus", New Object() {pnOrderID}, Me.GetOrderLabStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrderLabStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrderLabStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrderLabStatusCompleted(Me, New GetOrderLabStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.CancelPayment", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function CancelPayment(ByVal cOrderId As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("CancelPayment", New Object() {cOrderId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelPaymentAsync(ByVal cOrderId As String)
            Me.CancelPaymentAsync(cOrderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelPaymentAsync(ByVal cOrderId As String, ByVal userState As Object)
            If (Me.CancelPaymentOperationCompleted Is Nothing) Then
                Me.CancelPaymentOperationCompleted = AddressOf Me.OnCancelPaymentOperationCompleted
            End If
            Me.InvokeAsync("CancelPayment", New Object() {cOrderId}, Me.CancelPaymentOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelPaymentOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelPaymentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelPaymentCompleted(Me, New CancelPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetPayment", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetPayment(ByVal cPayload As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetPayment", New Object() {cPayload})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPaymentAsync(ByVal cPayload As String)
            Me.SetPaymentAsync(cPayload, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPaymentAsync(ByVal cPayload As String, ByVal userState As Object)
            If (Me.SetPaymentOperationCompleted Is Nothing) Then
                Me.SetPaymentOperationCompleted = AddressOf Me.OnSetPaymentOperationCompleted
            End If
            Me.InvokeAsync("SetPayment", New Object() {cPayload}, Me.SetPaymentOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPaymentOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPaymentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPaymentCompleted(Me, New SetPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabRQO", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetLabRQO(ByVal pStrRQO As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetLabRQO", New Object() {pStrRQO})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetLabRQOAsync(ByVal pStrRQO As String)
            Me.SetLabRQOAsync(pStrRQO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetLabRQOAsync(ByVal pStrRQO As String, ByVal userState As Object)
            If (Me.SetLabRQOOperationCompleted Is Nothing) Then
                Me.SetLabRQOOperationCompleted = AddressOf Me.OnSetLabRQOOperationCompleted
            End If
            Me.InvokeAsync("SetLabRQO", New Object() {pStrRQO}, Me.SetLabRQOOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetLabRQOOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetLabRQOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetLabRQOCompleted(Me, New SetLabRQOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabEvent", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function SetLabEvent(ByVal pStrEvn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("SetLabEvent", New Object() {pStrEvn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetLabEventAsync(ByVal pStrEvn As String)
            Me.SetLabEventAsync(pStrEvn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetLabEventAsync(ByVal pStrEvn As String, ByVal userState As Object)
            If (Me.SetLabEventOperationCompleted Is Nothing) Then
                Me.SetLabEventOperationCompleted = AddressOf Me.OnSetLabEventOperationCompleted
            End If
            Me.InvokeAsync("SetLabEvent", New Object() {pStrEvn}, Me.SetLabEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetLabEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetLabEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetLabEventCompleted(Me, New SetLabEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderRQOByMRN", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetOrderRQOByMRN(ByVal pMrn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetOrderRQOByMRN", New Object() {pMrn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrderRQOByMRNAsync(ByVal pMrn As String)
            Me.GetOrderRQOByMRNAsync(pMrn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrderRQOByMRNAsync(ByVal pMrn As String, ByVal userState As Object)
            If (Me.GetOrderRQOByMRNOperationCompleted Is Nothing) Then
                Me.GetOrderRQOByMRNOperationCompleted = AddressOf Me.OnGetOrderRQOByMRNOperationCompleted
            End If
            Me.InvokeAsync("GetOrderRQOByMRN", New Object() {pMrn}, Me.GetOrderRQOByMRNOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrderRQOByMRNOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrderRQOByMRNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrderRQOByMRNCompleted(Me, New GetOrderRQOByMRNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderRQOByInvoiceId", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetOrderRQOByInvoiceId(ByVal pInvoice_id As Double) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetOrderRQOByInvoiceId", New Object() {pInvoice_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrderRQOByInvoiceIdAsync(ByVal pInvoice_id As Double)
            Me.GetOrderRQOByInvoiceIdAsync(pInvoice_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrderRQOByInvoiceIdAsync(ByVal pInvoice_id As Double, ByVal userState As Object)
            If (Me.GetOrderRQOByInvoiceIdOperationCompleted Is Nothing) Then
                Me.GetOrderRQOByInvoiceIdOperationCompleted = AddressOf Me.OnGetOrderRQOByInvoiceIdOperationCompleted
            End If
            Me.InvokeAsync("GetOrderRQOByInvoiceId", New Object() {pInvoice_id}, Me.GetOrderRQOByInvoiceIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrderRQOByInvoiceIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrderRQOByInvoiceIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrderRQOByInvoiceIdCompleted(Me, New GetOrderRQOByInvoiceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderRQOByRqId", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetOrderRQOByRqId(ByVal pRq_type As String, ByVal pRq_id As Double) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetOrderRQOByRqId", New Object() {pRq_type, pRq_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrderRQOByRqIdAsync(ByVal pRq_type As String, ByVal pRq_id As Double)
            Me.GetOrderRQOByRqIdAsync(pRq_type, pRq_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrderRQOByRqIdAsync(ByVal pRq_type As String, ByVal pRq_id As Double, ByVal userState As Object)
            If (Me.GetOrderRQOByRqIdOperationCompleted Is Nothing) Then
                Me.GetOrderRQOByRqIdOperationCompleted = AddressOf Me.OnGetOrderRQOByRqIdOperationCompleted
            End If
            Me.InvokeAsync("GetOrderRQOByRqId", New Object() {pRq_type, pRq_id}, Me.GetOrderRQOByRqIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrderRQOByRqIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrderRQOByRqIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrderRQOByRqIdCompleted(Me, New GetOrderRQOByRqIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Version_LabService", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Version_LabService() As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Version_LabService", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Version_LabServiceAsync()
            Me.Get_Version_LabServiceAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Version_LabServiceAsync(ByVal userState As Object)
            If (Me.Get_Version_LabServiceOperationCompleted Is Nothing) Then
                Me.Get_Version_LabServiceOperationCompleted = AddressOf Me.OnGet_Version_LabServiceOperationCompleted
            End If
            Me.InvokeAsync("Get_Version_LabService", New Object(-1) {}, Me.Get_Version_LabServiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Version_LabServiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Version_LabServiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Version_LabServiceCompleted(Me, New Get_Version_LabServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getPatientinSurgical", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function getPatientinSurgical(ByVal pMrn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("getPatientinSurgical", New Object() {pMrn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientinSurgicalAsync(ByVal pMrn As String)
            Me.getPatientinSurgicalAsync(pMrn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientinSurgicalAsync(ByVal pMrn As String, ByVal userState As Object)
            If (Me.getPatientinSurgicalOperationCompleted Is Nothing) Then
                Me.getPatientinSurgicalOperationCompleted = AddressOf Me.OngetPatientinSurgicalOperationCompleted
            End If
            Me.InvokeAsync("getPatientinSurgical", New Object() {pMrn}, Me.getPatientinSurgicalOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientinSurgicalOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientinSurgicalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientinSurgicalCompleted(Me, New getPatientinSurgicalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.RxOverSupply", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function RxOverSupply(ByVal mHn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("RxOverSupply", New Object() {mHn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RxOverSupplyAsync(ByVal mHn As String)
            Me.RxOverSupplyAsync(mHn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RxOverSupplyAsync(ByVal mHn As String, ByVal userState As Object)
            If (Me.RxOverSupplyOperationCompleted Is Nothing) Then
                Me.RxOverSupplyOperationCompleted = AddressOf Me.OnRxOverSupplyOperationCompleted
            End If
            Me.InvokeAsync("RxOverSupply", New Object() {mHn}, Me.RxOverSupplyOperationCompleted, userState)
        End Sub
        
        Private Sub OnRxOverSupplyOperationCompleted(ByVal arg As Object)
            If (Not (Me.RxOverSupplyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RxOverSupplyCompleted(Me, New RxOverSupplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getPatientinOr", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function getPatientinOr(ByVal pSrc As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("getPatientinOr", New Object() {pSrc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientinOrAsync(ByVal pSrc As String)
            Me.getPatientinOrAsync(pSrc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientinOrAsync(ByVal pSrc As String, ByVal userState As Object)
            If (Me.getPatientinOrOperationCompleted Is Nothing) Then
                Me.getPatientinOrOperationCompleted = AddressOf Me.OngetPatientinOrOperationCompleted
            End If
            Me.InvokeAsync("getPatientinOr", New Object() {pSrc}, Me.getPatientinOrOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientinOrOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientinOrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientinOrCompleted(Me, New getPatientinOrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_AdrNaranjo", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_AdrNaranjo(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_AdrNaranjo", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_AdrNaranjoAsync(ByVal hn As String)
            Me.Get_AdrNaranjoAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_AdrNaranjoAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_AdrNaranjoOperationCompleted Is Nothing) Then
                Me.Get_AdrNaranjoOperationCompleted = AddressOf Me.OnGet_AdrNaranjoOperationCompleted
            End If
            Me.InvokeAsync("Get_AdrNaranjo", New Object() {hn}, Me.Get_AdrNaranjoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_AdrNaranjoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_AdrNaranjoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_AdrNaranjoCompleted(Me, New Get_AdrNaranjoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetDrRepmed", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetDrRepmed(ByVal pHn As String, ByVal pSrc As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetDrRepmed", New Object() {pHn, pSrc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDrRepmedAsync(ByVal pHn As String, ByVal pSrc As String)
            Me.GetDrRepmedAsync(pHn, pSrc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDrRepmedAsync(ByVal pHn As String, ByVal pSrc As String, ByVal userState As Object)
            If (Me.GetDrRepmedOperationCompleted Is Nothing) Then
                Me.GetDrRepmedOperationCompleted = AddressOf Me.OnGetDrRepmedOperationCompleted
            End If
            Me.InvokeAsync("GetDrRepmed", New Object() {pHn, pSrc}, Me.GetDrRepmedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDrRepmedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDrRepmedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDrRepmedCompleted(Me, New GetDrRepmedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getrxseq_prm", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function getrxseq_prm(ByVal pHn As String, ByVal pSrc As String, ByVal pdate As String, ByVal mDr As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("getrxseq_prm", New Object() {pHn, pSrc, pdate, mDr})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getrxseq_prmAsync(ByVal pHn As String, ByVal pSrc As String, ByVal pdate As String, ByVal mDr As String)
            Me.getrxseq_prmAsync(pHn, pSrc, pdate, mDr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getrxseq_prmAsync(ByVal pHn As String, ByVal pSrc As String, ByVal pdate As String, ByVal mDr As String, ByVal userState As Object)
            If (Me.getrxseq_prmOperationCompleted Is Nothing) Then
                Me.getrxseq_prmOperationCompleted = AddressOf Me.Ongetrxseq_prmOperationCompleted
            End If
            Me.InvokeAsync("getrxseq_prm", New Object() {pHn, pSrc, pdate, mDr}, Me.getrxseq_prmOperationCompleted, userState)
        End Sub
        
        Private Sub Ongetrxseq_prmOperationCompleted(ByVal arg As Object)
            If (Not (Me.getrxseq_prmCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getrxseq_prmCompleted(Me, New getrxseq_prmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetClaimFromRefund", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetClaimFromRefund(ByVal pRq_type As String, ByVal pRq_id As Double, ByVal pRq_seq As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetClaimFromRefund", New Object() {pRq_type, pRq_id, pRq_seq})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetClaimFromRefundAsync(ByVal pRq_type As String, ByVal pRq_id As Double, ByVal pRq_seq As String)
            Me.GetClaimFromRefundAsync(pRq_type, pRq_id, pRq_seq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetClaimFromRefundAsync(ByVal pRq_type As String, ByVal pRq_id As Double, ByVal pRq_seq As String, ByVal userState As Object)
            If (Me.GetClaimFromRefundOperationCompleted Is Nothing) Then
                Me.GetClaimFromRefundOperationCompleted = AddressOf Me.OnGetClaimFromRefundOperationCompleted
            End If
            Me.InvokeAsync("GetClaimFromRefund", New Object() {pRq_type, pRq_id, pRq_seq}, Me.GetClaimFromRefundOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetClaimFromRefundOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetClaimFromRefundCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetClaimFromRefundCompleted(Me, New GetClaimFromRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Ws_AllDrugGroup", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Ws_AllDrugGroup() As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Ws_AllDrugGroup", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Ws_AllDrugGroupAsync()
            Me.Ws_AllDrugGroupAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Ws_AllDrugGroupAsync(ByVal userState As Object)
            If (Me.Ws_AllDrugGroupOperationCompleted Is Nothing) Then
                Me.Ws_AllDrugGroupOperationCompleted = AddressOf Me.OnWs_AllDrugGroupOperationCompleted
            End If
            Me.InvokeAsync("Ws_AllDrugGroup", New Object(-1) {}, Me.Ws_AllDrugGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnWs_AllDrugGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ws_AllDrugGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ws_AllDrugGroupCompleted(Me, New Ws_AllDrugGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Ws_DrugGroup", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Ws_DrugGroup(ByVal pSrc As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Ws_DrugGroup", New Object() {pSrc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Ws_DrugGroupAsync(ByVal pSrc As String)
            Me.Ws_DrugGroupAsync(pSrc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Ws_DrugGroupAsync(ByVal pSrc As String, ByVal userState As Object)
            If (Me.Ws_DrugGroupOperationCompleted Is Nothing) Then
                Me.Ws_DrugGroupOperationCompleted = AddressOf Me.OnWs_DrugGroupOperationCompleted
            End If
            Me.InvokeAsync("Ws_DrugGroup", New Object() {pSrc}, Me.Ws_DrugGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnWs_DrugGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ws_DrugGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ws_DrugGroupCompleted(Me, New Ws_DrugGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetRxSeq", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetRxSeq(ByVal pHn As String, ByVal pSrc As String, ByVal pdate As String, ByVal mDr As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetRxSeq", New Object() {pHn, pSrc, pdate, mDr})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRxSeqAsync(ByVal pHn As String, ByVal pSrc As String, ByVal pdate As String, ByVal mDr As String)
            Me.GetRxSeqAsync(pHn, pSrc, pdate, mDr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRxSeqAsync(ByVal pHn As String, ByVal pSrc As String, ByVal pdate As String, ByVal mDr As String, ByVal userState As Object)
            If (Me.GetRxSeqOperationCompleted Is Nothing) Then
                Me.GetRxSeqOperationCompleted = AddressOf Me.OnGetRxSeqOperationCompleted
            End If
            Me.InvokeAsync("GetRxSeq", New Object() {pHn, pSrc, pdate, mDr}, Me.GetRxSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRxSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRxSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRxSeqCompleted(Me, New GetRxSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetRepeateMedByHN", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetRepeateMedByHN(ByVal tcHn As String, ByVal tcDr As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetRepeateMedByHN", New Object() {tcHn, tcDr})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRepeateMedByHNAsync(ByVal tcHn As String, ByVal tcDr As String)
            Me.GetRepeateMedByHNAsync(tcHn, tcDr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRepeateMedByHNAsync(ByVal tcHn As String, ByVal tcDr As String, ByVal userState As Object)
            If (Me.GetRepeateMedByHNOperationCompleted Is Nothing) Then
                Me.GetRepeateMedByHNOperationCompleted = AddressOf Me.OnGetRepeateMedByHNOperationCompleted
            End If
            Me.InvokeAsync("GetRepeateMedByHN", New Object() {tcHn, tcDr}, Me.GetRepeateMedByHNOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRepeateMedByHNOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRepeateMedByHNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRepeateMedByHNCompleted(Me, New GetRepeateMedByHNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_PriceSupply_byProduct"& _ 
            "_id", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function get_PriceSupply_byProduct_id(ByVal pcProduct_id As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("get_PriceSupply_byProduct_id", New Object() {pcProduct_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub get_PriceSupply_byProduct_idAsync(ByVal pcProduct_id As String)
            Me.get_PriceSupply_byProduct_idAsync(pcProduct_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub get_PriceSupply_byProduct_idAsync(ByVal pcProduct_id As String, ByVal userState As Object)
            If (Me.get_PriceSupply_byProduct_idOperationCompleted Is Nothing) Then
                Me.get_PriceSupply_byProduct_idOperationCompleted = AddressOf Me.Onget_PriceSupply_byProduct_idOperationCompleted
            End If
            Me.InvokeAsync("get_PriceSupply_byProduct_id", New Object() {pcProduct_id}, Me.get_PriceSupply_byProduct_idOperationCompleted, userState)
        End Sub
        
        Private Sub Onget_PriceSupply_byProduct_idOperationCompleted(ByVal arg As Object)
            If (Not (Me.get_PriceSupply_byProduct_idCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent get_PriceSupply_byProduct_idCompleted(Me, New get_PriceSupply_byProduct_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_ReimburseSupply_byPro"& _ 
            "duct_id", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function get_ReimburseSupply_byProduct_id(ByVal pcProduct_id As String, ByVal pcPolicy_no As String, ByVal pcPrice_type As String, ByVal pcEligible As String, ByVal pcIO As String, ByVal pnLevel As Integer, ByVal pnDiscount As Integer) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("get_ReimburseSupply_byProduct_id", New Object() {pcProduct_id, pcPolicy_no, pcPrice_type, pcEligible, pcIO, pnLevel, pnDiscount})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub get_ReimburseSupply_byProduct_idAsync(ByVal pcProduct_id As String, ByVal pcPolicy_no As String, ByVal pcPrice_type As String, ByVal pcEligible As String, ByVal pcIO As String, ByVal pnLevel As Integer, ByVal pnDiscount As Integer)
            Me.get_ReimburseSupply_byProduct_idAsync(pcProduct_id, pcPolicy_no, pcPrice_type, pcEligible, pcIO, pnLevel, pnDiscount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub get_ReimburseSupply_byProduct_idAsync(ByVal pcProduct_id As String, ByVal pcPolicy_no As String, ByVal pcPrice_type As String, ByVal pcEligible As String, ByVal pcIO As String, ByVal pnLevel As Integer, ByVal pnDiscount As Integer, ByVal userState As Object)
            If (Me.get_ReimburseSupply_byProduct_idOperationCompleted Is Nothing) Then
                Me.get_ReimburseSupply_byProduct_idOperationCompleted = AddressOf Me.Onget_ReimburseSupply_byProduct_idOperationCompleted
            End If
            Me.InvokeAsync("get_ReimburseSupply_byProduct_id", New Object() {pcProduct_id, pcPolicy_no, pcPrice_type, pcEligible, pcIO, pnLevel, pnDiscount}, Me.get_ReimburseSupply_byProduct_idOperationCompleted, userState)
        End Sub
        
        Private Sub Onget_ReimburseSupply_byProduct_idOperationCompleted(ByVal arg As Object)
            If (Not (Me.get_ReimburseSupply_byProduct_idCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent get_ReimburseSupply_byProduct_idCompleted(Me, New get_ReimburseSupply_byProduct_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchbyda"& _ 
            "te4batch", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_lab_data_researchbydate4batch(ByVal pBatchHN As String, ByVal pStartDate As String, ByVal pEndDate As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_lab_data_researchbydate4batch", New Object() {pBatchHN, pStartDate, pEndDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchbydate4batchAsync(ByVal pBatchHN As String, ByVal pStartDate As String, ByVal pEndDate As String)
            Me.Get_lab_data_researchbydate4batchAsync(pBatchHN, pStartDate, pEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchbydate4batchAsync(ByVal pBatchHN As String, ByVal pStartDate As String, ByVal pEndDate As String, ByVal userState As Object)
            If (Me.Get_lab_data_researchbydate4batchOperationCompleted Is Nothing) Then
                Me.Get_lab_data_researchbydate4batchOperationCompleted = AddressOf Me.OnGet_lab_data_researchbydate4batchOperationCompleted
            End If
            Me.InvokeAsync("Get_lab_data_researchbydate4batch", New Object() {pBatchHN, pStartDate, pEndDate}, Me.Get_lab_data_researchbydate4batchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_lab_data_researchbydate4batchOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_lab_data_researchbydate4batchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_lab_data_researchbydate4batchCompleted(Me, New Get_lab_data_researchbydate4batchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchall4"& _ 
            "batch", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_lab_data_researchall4batch(ByVal pBatchHN As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_lab_data_researchall4batch", New Object() {pBatchHN})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchall4batchAsync(ByVal pBatchHN As String)
            Me.Get_lab_data_researchall4batchAsync(pBatchHN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchall4batchAsync(ByVal pBatchHN As String, ByVal userState As Object)
            If (Me.Get_lab_data_researchall4batchOperationCompleted Is Nothing) Then
                Me.Get_lab_data_researchall4batchOperationCompleted = AddressOf Me.OnGet_lab_data_researchall4batchOperationCompleted
            End If
            Me.InvokeAsync("Get_lab_data_researchall4batch", New Object() {pBatchHN}, Me.Get_lab_data_researchall4batchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_lab_data_researchall4batchOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_lab_data_researchall4batchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_lab_data_researchall4batchCompleted(Me, New Get_lab_data_researchall4batchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchbyda"& _ 
            "te", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_lab_data_researchbydate(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_lab_data_researchbydate", New Object() {pHn, pStartDate, pEndDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchbydateAsync(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String)
            Me.Get_lab_data_researchbydateAsync(pHn, pStartDate, pEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchbydateAsync(ByVal pHn As String, ByVal pStartDate As String, ByVal pEndDate As String, ByVal userState As Object)
            If (Me.Get_lab_data_researchbydateOperationCompleted Is Nothing) Then
                Me.Get_lab_data_researchbydateOperationCompleted = AddressOf Me.OnGet_lab_data_researchbydateOperationCompleted
            End If
            Me.InvokeAsync("Get_lab_data_researchbydate", New Object() {pHn, pStartDate, pEndDate}, Me.Get_lab_data_researchbydateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_lab_data_researchbydateOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_lab_data_researchbydateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_lab_data_researchbydateCompleted(Me, New Get_lab_data_researchbydateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchall", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_lab_data_researchall(ByVal pHn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_lab_data_researchall", New Object() {pHn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchallAsync(ByVal pHn As String)
            Me.Get_lab_data_researchallAsync(pHn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_researchallAsync(ByVal pHn As String, ByVal userState As Object)
            If (Me.Get_lab_data_researchallOperationCompleted Is Nothing) Then
                Me.Get_lab_data_researchallOperationCompleted = AddressOf Me.OnGet_lab_data_researchallOperationCompleted
            End If
            Me.InvokeAsync("Get_lab_data_researchall", New Object() {pHn}, Me.Get_lab_data_researchallOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_lab_data_researchallOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_lab_data_researchallCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_lab_data_researchallCompleted(Me, New Get_lab_data_researchallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_outside", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_lab_data_outside(ByVal pReqname As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_lab_data_outside", New Object() {pReqname})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_outsideAsync(ByVal pReqname As String)
            Me.Get_lab_data_outsideAsync(pReqname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_lab_data_outsideAsync(ByVal pReqname As String, ByVal userState As Object)
            If (Me.Get_lab_data_outsideOperationCompleted Is Nothing) Then
                Me.Get_lab_data_outsideOperationCompleted = AddressOf Me.OnGet_lab_data_outsideOperationCompleted
            End If
            Me.InvokeAsync("Get_lab_data_outside", New Object() {pReqname}, Me.Get_lab_data_outsideOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_lab_data_outsideOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_lab_data_outsideCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_lab_data_outsideCompleted(Me, New Get_lab_data_outsideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrganizationInfoByPare"& _ 
            "ntId", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetOrganizationInfoByParentId(ByVal pParentID As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetOrganizationInfoByParentId", New Object() {pParentID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrganizationInfoByParentIdAsync(ByVal pParentID As String)
            Me.GetOrganizationInfoByParentIdAsync(pParentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrganizationInfoByParentIdAsync(ByVal pParentID As String, ByVal userState As Object)
            If (Me.GetOrganizationInfoByParentIdOperationCompleted Is Nothing) Then
                Me.GetOrganizationInfoByParentIdOperationCompleted = AddressOf Me.OnGetOrganizationInfoByParentIdOperationCompleted
            End If
            Me.InvokeAsync("GetOrganizationInfoByParentId", New Object() {pParentID}, Me.GetOrganizationInfoByParentIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrganizationInfoByParentIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrganizationInfoByParentIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrganizationInfoByParentIdCompleted(Me, New GetOrganizationInfoByParentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Org_detail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Org_detail(ByVal pOrgID As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Org_detail", New Object() {pOrgID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Org_detailAsync(ByVal pOrgID As String)
            Me.Get_Org_detailAsync(pOrgID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Org_detailAsync(ByVal pOrgID As String, ByVal userState As Object)
            If (Me.Get_Org_detailOperationCompleted Is Nothing) Then
                Me.Get_Org_detailOperationCompleted = AddressOf Me.OnGet_Org_detailOperationCompleted
            End If
            Me.InvokeAsync("Get_Org_detail", New Object() {pOrgID}, Me.Get_Org_detailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Org_detailOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Org_detailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Org_detailCompleted(Me, New Get_Org_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Place_detail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Place_detail(ByVal pPlaceID As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Place_detail", New Object() {pPlaceID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Place_detailAsync(ByVal pPlaceID As String)
            Me.Get_Place_detailAsync(pPlaceID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Place_detailAsync(ByVal pPlaceID As String, ByVal userState As Object)
            If (Me.Get_Place_detailOperationCompleted Is Nothing) Then
                Me.Get_Place_detailOperationCompleted = AddressOf Me.OnGet_Place_detailOperationCompleted
            End If
            Me.InvokeAsync("Get_Place_detail", New Object() {pPlaceID}, Me.Get_Place_detailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Place_detailOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Place_detailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Place_detailCompleted(Me, New Get_Place_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_sdloc_all", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_sdloc_all() As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_sdloc_all", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_sdloc_allAsync()
            Me.Get_sdloc_allAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_sdloc_allAsync(ByVal userState As Object)
            If (Me.Get_sdloc_allOperationCompleted Is Nothing) Then
                Me.Get_sdloc_allOperationCompleted = AddressOf Me.OnGet_sdloc_allOperationCompleted
            End If
            Me.InvokeAsync("Get_sdloc_all", New Object(-1) {}, Me.Get_sdloc_allOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_sdloc_allOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_sdloc_allCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_sdloc_allCompleted(Me, New Get_sdloc_allCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_sdloc_detail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_sdloc_detail(ByVal pSrc As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_sdloc_detail", New Object() {pSrc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_sdloc_detailAsync(ByVal pSrc As String)
            Me.Get_sdloc_detailAsync(pSrc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_sdloc_detailAsync(ByVal pSrc As String, ByVal userState As Object)
            If (Me.Get_sdloc_detailOperationCompleted Is Nothing) Then
                Me.Get_sdloc_detailOperationCompleted = AddressOf Me.OnGet_sdloc_detailOperationCompleted
            End If
            Me.InvokeAsync("Get_sdloc_detail", New Object() {pSrc}, Me.Get_sdloc_detailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_sdloc_detailOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_sdloc_detailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_sdloc_detailCompleted(Me, New Get_sdloc_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_staff_fulldetail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_staff_fulldetail(ByVal sCode As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_staff_fulldetail", New Object() {sCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_staff_fulldetailAsync(ByVal sCode As String)
            Me.Get_staff_fulldetailAsync(sCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_staff_fulldetailAsync(ByVal sCode As String, ByVal userState As Object)
            If (Me.Get_staff_fulldetailOperationCompleted Is Nothing) Then
                Me.Get_staff_fulldetailOperationCompleted = AddressOf Me.OnGet_staff_fulldetailOperationCompleted
            End If
            Me.InvokeAsync("Get_staff_fulldetail", New Object() {sCode}, Me.Get_staff_fulldetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_staff_fulldetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_staff_fulldetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_staff_fulldetailCompleted(Me, New Get_staff_fulldetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_ConfirmTube", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_ConfirmTube(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_ConfirmTube", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_ConfirmTubeAsync(ByVal xString As String)
            Me.Set_ConfirmTubeAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_ConfirmTubeAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_ConfirmTubeOperationCompleted Is Nothing) Then
                Me.Set_ConfirmTubeOperationCompleted = AddressOf Me.OnSet_ConfirmTubeOperationCompleted
            End If
            Me.InvokeAsync("Set_ConfirmTube", New Object() {xString}, Me.Set_ConfirmTubeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_ConfirmTubeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_ConfirmTubeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_ConfirmTubeCompleted(Me, New Set_ConfirmTubeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_LabOrderRegister", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_LabOrderRegister(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_LabOrderRegister", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_LabOrderRegisterAsync(ByVal xString As String)
            Me.Set_LabOrderRegisterAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_LabOrderRegisterAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_LabOrderRegisterOperationCompleted Is Nothing) Then
                Me.Set_LabOrderRegisterOperationCompleted = AddressOf Me.OnSet_LabOrderRegisterOperationCompleted
            End If
            Me.InvokeAsync("Set_LabOrderRegister", New Object() {xString}, Me.Set_LabOrderRegisterOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_LabOrderRegisterOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_LabOrderRegisterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_LabOrderRegisterCompleted(Me, New Set_LabOrderRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_TubeID", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_TubeID(ByVal pHn As String, ByVal pSpecimenType As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_TubeID", New Object() {pHn, pSpecimenType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_TubeIDAsync(ByVal pHn As String, ByVal pSpecimenType As String)
            Me.Get_TubeIDAsync(pHn, pSpecimenType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_TubeIDAsync(ByVal pHn As String, ByVal pSpecimenType As String, ByVal userState As Object)
            If (Me.Get_TubeIDOperationCompleted Is Nothing) Then
                Me.Get_TubeIDOperationCompleted = AddressOf Me.OnGet_TubeIDOperationCompleted
            End If
            Me.InvokeAsync("Get_TubeID", New Object() {pHn, pSpecimenType}, Me.Get_TubeIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_TubeIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_TubeIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_TubeIDCompleted(Me, New Get_TubeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Lab_OrderRegisted", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Lab_OrderRegisted(ByVal pHn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Lab_OrderRegisted", New Object() {pHn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Lab_OrderRegistedAsync(ByVal pHn As String)
            Me.Get_Lab_OrderRegistedAsync(pHn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Lab_OrderRegistedAsync(ByVal pHn As String, ByVal userState As Object)
            If (Me.Get_Lab_OrderRegistedOperationCompleted Is Nothing) Then
                Me.Get_Lab_OrderRegistedOperationCompleted = AddressOf Me.OnGet_Lab_OrderRegistedOperationCompleted
            End If
            Me.InvokeAsync("Get_Lab_OrderRegisted", New Object() {pHn}, Me.Get_Lab_OrderRegistedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Lab_OrderRegistedOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Lab_OrderRegistedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Lab_OrderRegistedCompleted(Me, New Get_Lab_OrderRegistedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Lab_OrderFull", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Lab_OrderFull(ByVal pHn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Lab_OrderFull", New Object() {pHn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Lab_OrderFullAsync(ByVal pHn As String)
            Me.Get_Lab_OrderFullAsync(pHn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Lab_OrderFullAsync(ByVal pHn As String, ByVal userState As Object)
            If (Me.Get_Lab_OrderFullOperationCompleted Is Nothing) Then
                Me.Get_Lab_OrderFullOperationCompleted = AddressOf Me.OnGet_Lab_OrderFullOperationCompleted
            End If
            Me.InvokeAsync("Get_Lab_OrderFull", New Object() {pHn}, Me.Get_Lab_OrderFullOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Lab_OrderFullOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Lab_OrderFullCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Lab_OrderFullCompleted(Me, New Get_Lab_OrderFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_StaffPayroll", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_StaffPayroll(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_StaffPayroll", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_StaffPayrollAsync(ByVal xString As String)
            Me.Set_StaffPayrollAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_StaffPayrollAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_StaffPayrollOperationCompleted Is Nothing) Then
                Me.Set_StaffPayrollOperationCompleted = AddressOf Me.OnSet_StaffPayrollOperationCompleted
            End If
            Me.InvokeAsync("Set_StaffPayroll", New Object() {xString}, Me.Set_StaffPayrollOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_StaffPayrollOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_StaffPayrollCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_StaffPayrollCompleted(Me, New Set_StaffPayrollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_OrderReceive", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_OrderReceive(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_OrderReceive", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_OrderReceiveAsync(ByVal xString As String)
            Me.Set_OrderReceiveAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_OrderReceiveAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_OrderReceiveOperationCompleted Is Nothing) Then
                Me.Set_OrderReceiveOperationCompleted = AddressOf Me.OnSet_OrderReceiveOperationCompleted
            End If
            Me.InvokeAsync("Set_OrderReceive", New Object() {xString}, Me.Set_OrderReceiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_OrderReceiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_OrderReceiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_OrderReceiveCompleted(Me, New Set_OrderReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_Ward2Xray", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_Ward2Xray(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_Ward2Xray", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_Ward2XrayAsync(ByVal xString As String)
            Me.Set_Ward2XrayAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_Ward2XrayAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_Ward2XrayOperationCompleted Is Nothing) Then
                Me.Set_Ward2XrayOperationCompleted = AddressOf Me.OnSet_Ward2XrayOperationCompleted
            End If
            Me.InvokeAsync("Set_Ward2Xray", New Object() {xString}, Me.Set_Ward2XrayOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_Ward2XrayOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_Ward2XrayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_Ward2XrayCompleted(Me, New Set_Ward2XrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_WorkStaff", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_WorkStaff(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_WorkStaff", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_WorkStaffAsync(ByVal xString As String)
            Me.Set_WorkStaffAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_WorkStaffAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_WorkStaffOperationCompleted Is Nothing) Then
                Me.Set_WorkStaffOperationCompleted = AddressOf Me.OnSet_WorkStaffOperationCompleted
            End If
            Me.InvokeAsync("Set_WorkStaff", New Object() {xString}, Me.Set_WorkStaffOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_WorkStaffOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_WorkStaffCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_WorkStaffCompleted(Me, New Set_WorkStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_ForeignXrayOrder", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_ForeignXrayOrder(ByVal pFHn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_ForeignXrayOrder", New Object() {pFHn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ForeignXrayOrderAsync(ByVal pFHn As String)
            Me.Get_ForeignXrayOrderAsync(pFHn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ForeignXrayOrderAsync(ByVal pFHn As String, ByVal userState As Object)
            If (Me.Get_ForeignXrayOrderOperationCompleted Is Nothing) Then
                Me.Get_ForeignXrayOrderOperationCompleted = AddressOf Me.OnGet_ForeignXrayOrderOperationCompleted
            End If
            Me.InvokeAsync("Get_ForeignXrayOrder", New Object() {pFHn}, Me.Get_ForeignXrayOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ForeignXrayOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ForeignXrayOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ForeignXrayOrderCompleted(Me, New Get_ForeignXrayOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_ForeignDemographic", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_ForeignDemographic(ByVal pFHn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_ForeignDemographic", New Object() {pFHn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ForeignDemographicAsync(ByVal pFHn As String)
            Me.Get_ForeignDemographicAsync(pFHn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ForeignDemographicAsync(ByVal pFHn As String, ByVal userState As Object)
            If (Me.Get_ForeignDemographicOperationCompleted Is Nothing) Then
                Me.Get_ForeignDemographicOperationCompleted = AddressOf Me.OnGet_ForeignDemographicOperationCompleted
            End If
            Me.InvokeAsync("Get_ForeignDemographic", New Object() {pFHn}, Me.Get_ForeignDemographicOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ForeignDemographicOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ForeignDemographicCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ForeignDemographicCompleted(Me, New Get_ForeignDemographicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_XrayOrder", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_XrayOrder(ByVal pHn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_XrayOrder", New Object() {pHn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_XrayOrderAsync(ByVal pHn As String)
            Me.Get_XrayOrderAsync(pHn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_XrayOrderAsync(ByVal pHn As String, ByVal userState As Object)
            If (Me.Get_XrayOrderOperationCompleted Is Nothing) Then
                Me.Get_XrayOrderOperationCompleted = AddressOf Me.OnGet_XrayOrderOperationCompleted
            End If
            Me.InvokeAsync("Get_XrayOrder", New Object() {pHn}, Me.Get_XrayOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_XrayOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_XrayOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_XrayOrderCompleted(Me, New Get_XrayOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_long_outs"& _ 
            "idepatient", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_demographic_long_outsidepatient(ByVal DeptCode As String, ByVal RefMrn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_demographic_long_outsidepatient", New Object() {DeptCode, RefMrn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_long_outsidepatientAsync(ByVal DeptCode As String, ByVal RefMrn As String)
            Me.Get_demographic_long_outsidepatientAsync(DeptCode, RefMrn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_long_outsidepatientAsync(ByVal DeptCode As String, ByVal RefMrn As String, ByVal userState As Object)
            If (Me.Get_demographic_long_outsidepatientOperationCompleted Is Nothing) Then
                Me.Get_demographic_long_outsidepatientOperationCompleted = AddressOf Me.OnGet_demographic_long_outsidepatientOperationCompleted
            End If
            Me.InvokeAsync("Get_demographic_long_outsidepatient", New Object() {DeptCode, RefMrn}, Me.Get_demographic_long_outsidepatientOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_demographic_long_outsidepatientOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_demographic_long_outsidepatientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_demographic_long_outsidepatientCompleted(Me, New Get_demographic_long_outsidepatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_MedPatient", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_MedPatient(ByVal hn As String, ByVal an As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_MedPatient", New Object() {hn, an})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_MedPatientAsync(ByVal hn As String, ByVal an As String)
            Me.Get_MedPatientAsync(hn, an, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_MedPatientAsync(ByVal hn As String, ByVal an As String, ByVal userState As Object)
            If (Me.Get_MedPatientOperationCompleted Is Nothing) Then
                Me.Get_MedPatientOperationCompleted = AddressOf Me.OnGet_MedPatientOperationCompleted
            End If
            Me.InvokeAsync("Get_MedPatient", New Object() {hn, an}, Me.Get_MedPatientOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_MedPatientOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_MedPatientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_MedPatientCompleted(Me, New Get_MedPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_OR", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_OR(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_OR", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_ORAsync(ByVal xString As String)
            Me.Set_ORAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_ORAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_OROperationCompleted Is Nothing) Then
                Me.Set_OROperationCompleted = AddressOf Me.OnSet_OROperationCompleted
            End If
            Me.InvokeAsync("Set_OR", New Object() {xString}, Me.Set_OROperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_OROperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_ORCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_ORCompleted(Me, New Set_ORCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_PAE", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_PAE(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_PAE", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_PAEAsync(ByVal xString As String)
            Me.Set_PAEAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_PAEAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_PAEOperationCompleted Is Nothing) Then
                Me.Set_PAEOperationCompleted = AddressOf Me.OnSet_PAEOperationCompleted
            End If
            Me.InvokeAsync("Set_PAE", New Object() {xString}, Me.Set_PAEOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_PAEOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_PAECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_PAECompleted(Me, New Set_PAECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Lab_order", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Lab_order(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Lab_order", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Lab_orderAsync(ByVal hn As String)
            Me.Get_Lab_orderAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Lab_orderAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_Lab_orderOperationCompleted Is Nothing) Then
                Me.Get_Lab_orderOperationCompleted = AddressOf Me.OnGet_Lab_orderOperationCompleted
            End If
            Me.InvokeAsync("Get_Lab_order", New Object() {hn}, Me.Get_Lab_orderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Lab_orderOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Lab_orderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Lab_orderCompleted(Me, New Get_Lab_orderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_Demographic_Long_Outs"& _ 
            "idePatient", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_Demographic_Long_OutsidePatient(ByVal pXString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_Demographic_Long_OutsidePatient", New Object() {pXString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_Demographic_Long_OutsidePatientAsync(ByVal pXString As String)
            Me.Set_Demographic_Long_OutsidePatientAsync(pXString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_Demographic_Long_OutsidePatientAsync(ByVal pXString As String, ByVal userState As Object)
            If (Me.Set_Demographic_Long_OutsidePatientOperationCompleted Is Nothing) Then
                Me.Set_Demographic_Long_OutsidePatientOperationCompleted = AddressOf Me.OnSet_Demographic_Long_OutsidePatientOperationCompleted
            End If
            Me.InvokeAsync("Set_Demographic_Long_OutsidePatient", New Object() {pXString}, Me.Set_Demographic_Long_OutsidePatientOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_Demographic_Long_OutsidePatientOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_Demographic_Long_OutsidePatientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_Demographic_Long_OutsidePatientCompleted(Me, New Set_Demographic_Long_OutsidePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_staff_detail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_staff_detail(ByVal user_id As String, ByVal password_id As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_staff_detail", New Object() {user_id, password_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_staff_detailAsync(ByVal user_id As String, ByVal password_id As String)
            Me.Get_staff_detailAsync(user_id, password_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_staff_detailAsync(ByVal user_id As String, ByVal password_id As String, ByVal userState As Object)
            If (Me.Get_staff_detailOperationCompleted Is Nothing) Then
                Me.Get_staff_detailOperationCompleted = AddressOf Me.OnGet_staff_detailOperationCompleted
            End If
            Me.InvokeAsync("Get_staff_detail", New Object() {user_id, password_id}, Me.Get_staff_detailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_staff_detailOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_staff_detailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_staff_detailCompleted(Me, New Get_staff_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Adr", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Adr(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Adr", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_AdrAsync(ByVal hn As String)
            Me.Get_AdrAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_AdrAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_AdrOperationCompleted Is Nothing) Then
                Me.Get_AdrOperationCompleted = AddressOf Me.OnGet_AdrOperationCompleted
            End If
            Me.InvokeAsync("Get_Adr", New Object() {hn}, Me.Get_AdrOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_AdrOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_AdrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_AdrCompleted(Me, New Get_AdrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Claim_Amt", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Claim_Amt(ByVal hn As String, ByVal accession_No As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Claim_Amt", New Object() {hn, accession_No})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Claim_AmtAsync(ByVal hn As String, ByVal accession_No As String)
            Me.Get_Claim_AmtAsync(hn, accession_No, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Claim_AmtAsync(ByVal hn As String, ByVal accession_No As String, ByVal userState As Object)
            If (Me.Get_Claim_AmtOperationCompleted Is Nothing) Then
                Me.Get_Claim_AmtOperationCompleted = AddressOf Me.OnGet_Claim_AmtOperationCompleted
            End If
            Me.InvokeAsync("Get_Claim_Amt", New Object() {hn, accession_No}, Me.Get_Claim_AmtOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Claim_AmtOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Claim_AmtCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Claim_AmtCompleted(Me, New Get_Claim_AmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_lab_data(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_lab_data", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_lab_dataAsync(ByVal hn As String)
            Me.Get_lab_dataAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_lab_dataAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_lab_dataOperationCompleted Is Nothing) Then
                Me.Get_lab_dataOperationCompleted = AddressOf Me.OnGet_lab_dataOperationCompleted
            End If
            Me.InvokeAsync("Get_lab_data", New Object() {hn}, Me.Get_lab_dataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_lab_dataOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_lab_dataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_lab_dataCompleted(Me, New Get_lab_dataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Cancel_Billing", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Cancel_Billing(ByVal hn As String, ByVal accession_No As String, ByVal an As String, ByVal iseq As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Cancel_Billing", New Object() {hn, accession_No, an, iseq})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cancel_BillingAsync(ByVal hn As String, ByVal accession_No As String, ByVal an As String, ByVal iseq As String)
            Me.Cancel_BillingAsync(hn, accession_No, an, iseq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cancel_BillingAsync(ByVal hn As String, ByVal accession_No As String, ByVal an As String, ByVal iseq As String, ByVal userState As Object)
            If (Me.Cancel_BillingOperationCompleted Is Nothing) Then
                Me.Cancel_BillingOperationCompleted = AddressOf Me.OnCancel_BillingOperationCompleted
            End If
            Me.InvokeAsync("Cancel_Billing", New Object() {hn, accession_No, an, iseq}, Me.Cancel_BillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancel_BillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cancel_BillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cancel_BillingCompleted(Me, New Cancel_BillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_Billing", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Set_Billing(ByVal xString As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Set_Billing", New Object() {xString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Set_BillingAsync(ByVal xString As String)
            Me.Set_BillingAsync(xString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Set_BillingAsync(ByVal xString As String, ByVal userState As Object)
            If (Me.Set_BillingOperationCompleted Is Nothing) Then
                Me.Set_BillingOperationCompleted = AddressOf Me.OnSet_BillingOperationCompleted
            End If
            Me.InvokeAsync("Set_Billing", New Object() {xString}, Me.Set_BillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnSet_BillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.Set_BillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Set_BillingCompleted(Me, New Set_BillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_all_exam", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_all_exam(ByVal pExam_code As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_all_exam", New Object() {pExam_code})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_all_examAsync(ByVal pExam_code As String)
            Me.Get_all_examAsync(pExam_code, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_all_examAsync(ByVal pExam_code As String, ByVal userState As Object)
            If (Me.Get_all_examOperationCompleted Is Nothing) Then
                Me.Get_all_examOperationCompleted = AddressOf Me.OnGet_all_examOperationCompleted
            End If
            Me.InvokeAsync("Get_all_exam", New Object() {pExam_code}, Me.Get_all_examOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_all_examOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_all_examCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_all_examCompleted(Me, New Get_all_examCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Payment_Status", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Payment_Status(ByVal hn As String, ByVal an As String, ByVal accNo As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_Payment_Status", New Object() {hn, an, accNo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Payment_StatusAsync(ByVal hn As String, ByVal an As String, ByVal accNo As String)
            Me.Get_Payment_StatusAsync(hn, an, accNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Payment_StatusAsync(ByVal hn As String, ByVal an As String, ByVal accNo As String, ByVal userState As Object)
            If (Me.Get_Payment_StatusOperationCompleted Is Nothing) Then
                Me.Get_Payment_StatusOperationCompleted = AddressOf Me.OnGet_Payment_StatusOperationCompleted
            End If
            Me.InvokeAsync("Get_Payment_Status", New Object() {hn, an, accNo}, Me.Get_Payment_StatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Payment_StatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Payment_StatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Payment_StatusCompleted(Me, New Get_Payment_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_ipd_detail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_ipd_detail(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_ipd_detail", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ipd_detailAsync(ByVal hn As String)
            Me.Get_ipd_detailAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ipd_detailAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_ipd_detailOperationCompleted Is Nothing) Then
                Me.Get_ipd_detailOperationCompleted = AddressOf Me.OnGet_ipd_detailOperationCompleted
            End If
            Me.InvokeAsync("Get_ipd_detail", New Object() {hn}, Me.Get_ipd_detailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ipd_detailOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ipd_detailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ipd_detailCompleted(Me, New Get_ipd_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEligibilityInsuranceDe"& _ 
            "tail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetEligibilityInsuranceDetail(ByVal pMrn As String, ByVal pEncType As String, ByVal pEncID As String, ByVal pSDLOC As String, ByVal pPerfDate As String, ByVal pClinicType As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetEligibilityInsuranceDetail", New Object() {pMrn, pEncType, pEncID, pSDLOC, pPerfDate, pClinicType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEligibilityInsuranceDetailAsync(ByVal pMrn As String, ByVal pEncType As String, ByVal pEncID As String, ByVal pSDLOC As String, ByVal pPerfDate As String, ByVal pClinicType As String)
            Me.GetEligibilityInsuranceDetailAsync(pMrn, pEncType, pEncID, pSDLOC, pPerfDate, pClinicType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEligibilityInsuranceDetailAsync(ByVal pMrn As String, ByVal pEncType As String, ByVal pEncID As String, ByVal pSDLOC As String, ByVal pPerfDate As String, ByVal pClinicType As String, ByVal userState As Object)
            If (Me.GetEligibilityInsuranceDetailOperationCompleted Is Nothing) Then
                Me.GetEligibilityInsuranceDetailOperationCompleted = AddressOf Me.OnGetEligibilityInsuranceDetailOperationCompleted
            End If
            Me.InvokeAsync("GetEligibilityInsuranceDetail", New Object() {pMrn, pEncType, pEncID, pSDLOC, pPerfDate, pClinicType}, Me.GetEligibilityInsuranceDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEligibilityInsuranceDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEligibilityInsuranceDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEligibilityInsuranceDetailCompleted(Me, New GetEligibilityInsuranceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailByMRNEN"& _ 
            "CTYPE", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetEncounterDetailByMRNENCTYPE(ByVal pMrn As String, ByVal pEncType As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetEncounterDetailByMRNENCTYPE", New Object() {pMrn, pEncType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailByMRNENCTYPEAsync(ByVal pMrn As String, ByVal pEncType As String)
            Me.GetEncounterDetailByMRNENCTYPEAsync(pMrn, pEncType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailByMRNENCTYPEAsync(ByVal pMrn As String, ByVal pEncType As String, ByVal userState As Object)
            If (Me.GetEncounterDetailByMRNENCTYPEOperationCompleted Is Nothing) Then
                Me.GetEncounterDetailByMRNENCTYPEOperationCompleted = AddressOf Me.OnGetEncounterDetailByMRNENCTYPEOperationCompleted
            End If
            Me.InvokeAsync("GetEncounterDetailByMRNENCTYPE", New Object() {pMrn, pEncType}, Me.GetEncounterDetailByMRNENCTYPEOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEncounterDetailByMRNENCTYPEOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEncounterDetailByMRNENCTYPECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEncounterDetailByMRNENCTYPECompleted(Me, New GetEncounterDetailByMRNENCTYPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailByMRNDA"& _ 
            "TE", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetEncounterDetailByMRNDATE(ByVal pMrn As String, ByVal pCDate As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetEncounterDetailByMRNDATE", New Object() {pMrn, pCDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailByMRNDATEAsync(ByVal pMrn As String, ByVal pCDate As String)
            Me.GetEncounterDetailByMRNDATEAsync(pMrn, pCDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailByMRNDATEAsync(ByVal pMrn As String, ByVal pCDate As String, ByVal userState As Object)
            If (Me.GetEncounterDetailByMRNDATEOperationCompleted Is Nothing) Then
                Me.GetEncounterDetailByMRNDATEOperationCompleted = AddressOf Me.OnGetEncounterDetailByMRNDATEOperationCompleted
            End If
            Me.InvokeAsync("GetEncounterDetailByMRNDATE", New Object() {pMrn, pCDate}, Me.GetEncounterDetailByMRNDATEOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEncounterDetailByMRNDATEOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEncounterDetailByMRNDATECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEncounterDetailByMRNDATECompleted(Me, New GetEncounterDetailByMRNDATECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailByMRNFo"& _ 
            "rToday", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetEncounterDetailByMRNForToday(ByVal pMrn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetEncounterDetailByMRNForToday", New Object() {pMrn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailByMRNForTodayAsync(ByVal pMrn As String)
            Me.GetEncounterDetailByMRNForTodayAsync(pMrn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEncounterDetailByMRNForTodayAsync(ByVal pMrn As String, ByVal userState As Object)
            If (Me.GetEncounterDetailByMRNForTodayOperationCompleted Is Nothing) Then
                Me.GetEncounterDetailByMRNForTodayOperationCompleted = AddressOf Me.OnGetEncounterDetailByMRNForTodayOperationCompleted
            End If
            Me.InvokeAsync("GetEncounterDetailByMRNForToday", New Object() {pMrn}, Me.GetEncounterDetailByMRNForTodayOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEncounterDetailByMRNForTodayOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEncounterDetailByMRNForTodayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEncounterDetailByMRNForTodayCompleted(Me, New GetEncounterDetailByMRNForTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_appointment_detailByD"& _ 
            "ateSdloc", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_appointment_detailByDateSdloc(ByVal pCDate As String, ByVal pCSdloc As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_appointment_detailByDateSdloc", New Object() {pCDate, pCSdloc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_appointment_detailByDateSdlocAsync(ByVal pCDate As String, ByVal pCSdloc As String)
            Me.Get_appointment_detailByDateSdlocAsync(pCDate, pCSdloc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_appointment_detailByDateSdlocAsync(ByVal pCDate As String, ByVal pCSdloc As String, ByVal userState As Object)
            If (Me.Get_appointment_detailByDateSdlocOperationCompleted Is Nothing) Then
                Me.Get_appointment_detailByDateSdlocOperationCompleted = AddressOf Me.OnGet_appointment_detailByDateSdlocOperationCompleted
            End If
            Me.InvokeAsync("Get_appointment_detailByDateSdloc", New Object() {pCDate, pCSdloc}, Me.Get_appointment_detailByDateSdlocOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_appointment_detailByDateSdlocOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_appointment_detailByDateSdlocCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_appointment_detailByDateSdlocCompleted(Me, New Get_appointment_detailByDateSdlocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_appointment_detail", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_appointment_detail(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_appointment_detail", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_appointment_detailAsync(ByVal hn As String)
            Me.Get_appointment_detailAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_appointment_detailAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_appointment_detailOperationCompleted Is Nothing) Then
                Me.Get_appointment_detailOperationCompleted = AddressOf Me.OnGet_appointment_detailOperationCompleted
            End If
            Me.InvokeAsync("Get_appointment_detail", New Object() {hn}, Me.Get_appointment_detailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_appointment_detailOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_appointment_detailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_appointment_detailCompleted(Me, New Get_appointment_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetHNByIdCard", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function GetHNByIdCard(ByVal pIdCardNumber As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("GetHNByIdCard", New Object() {pIdCardNumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHNByIdCardAsync(ByVal pIdCardNumber As String)
            Me.GetHNByIdCardAsync(pIdCardNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHNByIdCardAsync(ByVal pIdCardNumber As String, ByVal userState As Object)
            If (Me.GetHNByIdCardOperationCompleted Is Nothing) Then
                Me.GetHNByIdCardOperationCompleted = AddressOf Me.OnGetHNByIdCardOperationCompleted
            End If
            Me.InvokeAsync("GetHNByIdCard", New Object() {pIdCardNumber}, Me.GetHNByIdCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHNByIdCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHNByIdCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHNByIdCardCompleted(Me, New GetHNByIdCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_shortByNa"& _ 
            "me", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_demographic_shortByName(ByVal cName As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_demographic_shortByName", New Object() {cName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_shortByNameAsync(ByVal cName As String)
            Me.Get_demographic_shortByNameAsync(cName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_shortByNameAsync(ByVal cName As String, ByVal userState As Object)
            If (Me.Get_demographic_shortByNameOperationCompleted Is Nothing) Then
                Me.Get_demographic_shortByNameOperationCompleted = AddressOf Me.OnGet_demographic_shortByNameOperationCompleted
            End If
            Me.InvokeAsync("Get_demographic_shortByName", New Object() {cName}, Me.Get_demographic_shortByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_demographic_shortByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_demographic_shortByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_demographic_shortByNameCompleted(Me, New Get_demographic_shortByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_long", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_demographic_long(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_demographic_long", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_longAsync(ByVal hn As String)
            Me.Get_demographic_longAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_longAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_demographic_longOperationCompleted Is Nothing) Then
                Me.Get_demographic_longOperationCompleted = AddressOf Me.OnGet_demographic_longOperationCompleted
            End If
            Me.InvokeAsync("Get_demographic_long", New Object() {hn}, Me.Get_demographic_longOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_demographic_longOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_demographic_longCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_demographic_longCompleted(Me, New Get_demographic_longCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_short", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_demographic_short(ByVal hn As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("Get_demographic_short", New Object() {hn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_shortAsync(ByVal hn As String)
            Me.Get_demographic_shortAsync(hn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_demographic_shortAsync(ByVal hn As String, ByVal userState As Object)
            If (Me.Get_demographic_shortOperationCompleted Is Nothing) Then
                Me.Get_demographic_shortOperationCompleted = AddressOf Me.OnGet_demographic_shortOperationCompleted
            End If
            Me.InvokeAsync("Get_demographic_short", New Object() {hn}, Me.Get_demographic_shortOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_demographic_shortOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_demographic_shortCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_demographic_shortCompleted(Me, New Get_demographic_shortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Version", RequestNamespace:="http://tempuri.org/patientservice/message/", ResponseNamespace:="http://tempuri.org/patientservice/message/")>  _
        Public Function Get_Version() As <System.Xml.Serialization.SoapElementAttribute("Result")> Object
            Dim results() As Object = Me.Invoke("Get_Version", New Object(-1) {})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_VersionAsync()
            Me.Get_VersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_VersionAsync(ByVal userState As Object)
            If (Me.Get_VersionOperationCompleted Is Nothing) Then
                Me.Get_VersionOperationCompleted = AddressOf Me.OnGet_VersionOperationCompleted
            End If
            Me.InvokeAsync("Get_Version", New Object(-1) {}, Me.Get_VersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_VersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_VersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_VersionCompleted(Me, New Get_VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub CheckClinicTypeBySDLOCCompletedEventHandler(ByVal sender As Object, ByVal e As CheckClinicTypeBySDLOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckClinicTypeBySDLOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub get_drug_IPD_statusCompletedEventHandler(ByVal sender As Object, ByVal e As get_drug_IPD_statusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class get_drug_IPD_statusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub get_drug_IPDCompletedEventHandler(ByVal sender As Object, ByVal e As get_drug_IPDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class get_drug_IPDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetEncouterDetailByEncIdAndTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetEncouterDetailByEncIdAndTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEncouterDetailByEncIdAndTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEncounterDetailClinicTypePriceTypeByMRNActiveDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub searchCytoResultByMRNDateCompletedEventHandler(ByVal sender As Object, ByVal e As searchCytoResultByMRNDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchCytoResultByMRNDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub searchPathoResultByMRNDateCompletedEventHandler(ByVal sender As Object, ByVal e As searchPathoResultByMRNDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchPathoResultByMRNDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub getParentDetailByMRNCompletedEventHandler(ByVal sender As Object, ByVal e As getParentDetailByMRNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getParentDetailByMRNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub searchORApppointmentByPlaceAndAppointmentDateCompletedEventHandler(ByVal sender As Object, ByVal e As searchORApppointmentByPlaceAndAppointmentDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchORApppointmentByPlaceAndAppointmentDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub CheckPlacePremiumCompletedEventHandler(ByVal sender As Object, ByVal e As CheckPlacePremiumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckPlacePremiumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetChangeOrderCompletedEventHandler(ByVal sender As Object, ByVal e As SetChangeOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetChangeOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_demographic_shortbyANCompletedEventHandler(ByVal sender As Object, ByVal e As Get_demographic_shortbyANCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_demographic_shortbyANCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetProductLocationByBagIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductLocationByBagIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductLocationByBagIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetPatientBloodGrpByMRNCompletedEventHandler(ByVal sender As Object, ByVal e As GetPatientBloodGrpByMRNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPatientBloodGrpByMRNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetLabEventPerformDateTimeCompletedEventHandler(ByVal sender As Object, ByVal e As SetLabEventPerformDateTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetLabEventPerformDateTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub getCurrentDrugCompletedEventHandler(ByVal sender As Object, ByVal e As getCurrentDrugCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCurrentDrugCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SearchAllPriceTypeCompletedEventHandler(ByVal sender As Object, ByVal e As SearchAllPriceTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchAllPriceTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SearchAllClinicTypeCompletedEventHandler(ByVal sender As Object, ByVal e As SearchAllClinicTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchAllClinicTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetBBTrackingByORDCompletedEventHandler(ByVal sender As Object, ByVal e As SetBBTrackingByORDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetBBTrackingByORDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetBBTrackingCompletedEventHandler(ByVal sender As Object, ByVal e As SetBBTrackingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetBBTrackingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetLabResultCompletedEventHandler(ByVal sender As Object, ByVal e As SetLabResultCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetLabResultCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SearchProductDetailByProductIDCompletedEventHandler(ByVal sender As Object, ByVal e As SearchProductDetailByProductIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchProductDetailByProductIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetOrderLabStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrderLabStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrderLabStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub CancelPaymentCompletedEventHandler(ByVal sender As Object, ByVal e As CancelPaymentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelPaymentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetPaymentCompletedEventHandler(ByVal sender As Object, ByVal e As SetPaymentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPaymentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetLabRQOCompletedEventHandler(ByVal sender As Object, ByVal e As SetLabRQOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetLabRQOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub SetLabEventCompletedEventHandler(ByVal sender As Object, ByVal e As SetLabEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetLabEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetOrderRQOByMRNCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrderRQOByMRNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrderRQOByMRNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetOrderRQOByInvoiceIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrderRQOByInvoiceIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrderRQOByInvoiceIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetOrderRQOByRqIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrderRQOByRqIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrderRQOByRqIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Version_LabServiceCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Version_LabServiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Version_LabServiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub getPatientinSurgicalCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientinSurgicalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientinSurgicalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub RxOverSupplyCompletedEventHandler(ByVal sender As Object, ByVal e As RxOverSupplyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RxOverSupplyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub getPatientinOrCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientinOrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientinOrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_AdrNaranjoCompletedEventHandler(ByVal sender As Object, ByVal e As Get_AdrNaranjoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_AdrNaranjoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetDrRepmedCompletedEventHandler(ByVal sender As Object, ByVal e As GetDrRepmedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDrRepmedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub getrxseq_prmCompletedEventHandler(ByVal sender As Object, ByVal e As getrxseq_prmCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getrxseq_prmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetClaimFromRefundCompletedEventHandler(ByVal sender As Object, ByVal e As GetClaimFromRefundCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetClaimFromRefundCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Ws_AllDrugGroupCompletedEventHandler(ByVal sender As Object, ByVal e As Ws_AllDrugGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ws_AllDrugGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Ws_DrugGroupCompletedEventHandler(ByVal sender As Object, ByVal e As Ws_DrugGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ws_DrugGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetRxSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetRxSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRxSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetRepeateMedByHNCompletedEventHandler(ByVal sender As Object, ByVal e As GetRepeateMedByHNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRepeateMedByHNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub get_PriceSupply_byProduct_idCompletedEventHandler(ByVal sender As Object, ByVal e As get_PriceSupply_byProduct_idCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class get_PriceSupply_byProduct_idCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub get_ReimburseSupply_byProduct_idCompletedEventHandler(ByVal sender As Object, ByVal e As get_ReimburseSupply_byProduct_idCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class get_ReimburseSupply_byProduct_idCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_lab_data_researchbydate4batchCompletedEventHandler(ByVal sender As Object, ByVal e As Get_lab_data_researchbydate4batchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_lab_data_researchbydate4batchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_lab_data_researchall4batchCompletedEventHandler(ByVal sender As Object, ByVal e As Get_lab_data_researchall4batchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_lab_data_researchall4batchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_lab_data_researchbydateCompletedEventHandler(ByVal sender As Object, ByVal e As Get_lab_data_researchbydateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_lab_data_researchbydateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_lab_data_researchallCompletedEventHandler(ByVal sender As Object, ByVal e As Get_lab_data_researchallCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_lab_data_researchallCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_lab_data_outsideCompletedEventHandler(ByVal sender As Object, ByVal e As Get_lab_data_outsideCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_lab_data_outsideCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetOrganizationInfoByParentIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrganizationInfoByParentIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrganizationInfoByParentIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Org_detailCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Org_detailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Org_detailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Place_detailCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Place_detailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Place_detailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_sdloc_allCompletedEventHandler(ByVal sender As Object, ByVal e As Get_sdloc_allCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_sdloc_allCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_sdloc_detailCompletedEventHandler(ByVal sender As Object, ByVal e As Get_sdloc_detailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_sdloc_detailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_staff_fulldetailCompletedEventHandler(ByVal sender As Object, ByVal e As Get_staff_fulldetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_staff_fulldetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_ConfirmTubeCompletedEventHandler(ByVal sender As Object, ByVal e As Set_ConfirmTubeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_ConfirmTubeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_LabOrderRegisterCompletedEventHandler(ByVal sender As Object, ByVal e As Set_LabOrderRegisterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_LabOrderRegisterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_TubeIDCompletedEventHandler(ByVal sender As Object, ByVal e As Get_TubeIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_TubeIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Lab_OrderRegistedCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Lab_OrderRegistedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Lab_OrderRegistedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Lab_OrderFullCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Lab_OrderFullCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Lab_OrderFullCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_StaffPayrollCompletedEventHandler(ByVal sender As Object, ByVal e As Set_StaffPayrollCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_StaffPayrollCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_OrderReceiveCompletedEventHandler(ByVal sender As Object, ByVal e As Set_OrderReceiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_OrderReceiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_Ward2XrayCompletedEventHandler(ByVal sender As Object, ByVal e As Set_Ward2XrayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_Ward2XrayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_WorkStaffCompletedEventHandler(ByVal sender As Object, ByVal e As Set_WorkStaffCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_WorkStaffCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_ForeignXrayOrderCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ForeignXrayOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ForeignXrayOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_ForeignDemographicCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ForeignDemographicCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ForeignDemographicCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_XrayOrderCompletedEventHandler(ByVal sender As Object, ByVal e As Get_XrayOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_XrayOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_demographic_long_outsidepatientCompletedEventHandler(ByVal sender As Object, ByVal e As Get_demographic_long_outsidepatientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_demographic_long_outsidepatientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_MedPatientCompletedEventHandler(ByVal sender As Object, ByVal e As Get_MedPatientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_MedPatientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_ORCompletedEventHandler(ByVal sender As Object, ByVal e As Set_ORCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_ORCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_PAECompletedEventHandler(ByVal sender As Object, ByVal e As Set_PAECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_PAECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Lab_orderCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Lab_orderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Lab_orderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_Demographic_Long_OutsidePatientCompletedEventHandler(ByVal sender As Object, ByVal e As Set_Demographic_Long_OutsidePatientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_Demographic_Long_OutsidePatientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_staff_detailCompletedEventHandler(ByVal sender As Object, ByVal e As Get_staff_detailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_staff_detailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_AdrCompletedEventHandler(ByVal sender As Object, ByVal e As Get_AdrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_AdrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Claim_AmtCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Claim_AmtCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Claim_AmtCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_lab_dataCompletedEventHandler(ByVal sender As Object, ByVal e As Get_lab_dataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_lab_dataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Cancel_BillingCompletedEventHandler(ByVal sender As Object, ByVal e As Cancel_BillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cancel_BillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Set_BillingCompletedEventHandler(ByVal sender As Object, ByVal e As Set_BillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Set_BillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_all_examCompletedEventHandler(ByVal sender As Object, ByVal e As Get_all_examCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_all_examCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_Payment_StatusCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Payment_StatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Payment_StatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_ipd_detailCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ipd_detailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ipd_detailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetEligibilityInsuranceDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetEligibilityInsuranceDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEligibilityInsuranceDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetEncounterDetailByMRNENCTYPECompletedEventHandler(ByVal sender As Object, ByVal e As GetEncounterDetailByMRNENCTYPECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEncounterDetailByMRNENCTYPECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetEncounterDetailByMRNDATECompletedEventHandler(ByVal sender As Object, ByVal e As GetEncounterDetailByMRNDATECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEncounterDetailByMRNDATECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetEncounterDetailByMRNForTodayCompletedEventHandler(ByVal sender As Object, ByVal e As GetEncounterDetailByMRNForTodayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEncounterDetailByMRNForTodayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_appointment_detailByDateSdlocCompletedEventHandler(ByVal sender As Object, ByVal e As Get_appointment_detailByDateSdlocCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_appointment_detailByDateSdlocCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_appointment_detailCompletedEventHandler(ByVal sender As Object, ByVal e As Get_appointment_detailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_appointment_detailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub GetHNByIdCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetHNByIdCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHNByIdCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_demographic_shortByNameCompletedEventHandler(ByVal sender As Object, ByVal e As Get_demographic_shortByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_demographic_shortByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_demographic_longCompletedEventHandler(ByVal sender As Object, ByVal e As Get_demographic_longCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_demographic_longCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_demographic_shortCompletedEventHandler(ByVal sender As Object, ByVal e As Get_demographic_shortCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_demographic_shortCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0")>  _
    Public Delegate Sub Get_VersionCompletedEventHandler(ByVal sender As Object, ByVal e As Get_VersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.30.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_VersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
End Namespace
